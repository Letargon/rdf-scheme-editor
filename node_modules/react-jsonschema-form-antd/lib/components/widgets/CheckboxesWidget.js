"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("antd/lib/checkbox/style/css");

require("antd/lib/row/style/css");

require("antd/lib/col/style/css");

var _antd = require("antd");

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CheckboxGroup = _antd.Checkbox.Group;

function CheckboxesWidget(props) {
  var id = props.id,
      disabled = props.disabled,
      options = props.options,
      value = props.value,
      autofocus = props.autofocus,
      readonly = props.readonly,
      _onChange = props.onChange;
  var enumOptions = options.enumOptions,
      inline = options.inline;

  return _react2.default.createElement(
    CheckboxGroup,
    {
      style: { width: "100%" },
      value: value,
      onChange: function onChange(values) {
        _onChange(values);
      } },
    _react2.default.createElement(
      _antd.Row,
      null,
      enumOptions.map(function (option, index) {
        var disabledValue = disabled || readonly ? "disabled" : "";
        var checkbox = _react2.default.createElement(
          _antd.Checkbox,
          {
            key: option.value,
            value: option.value,
            id: id + "_" + index,
            disabled: disabledValue || readonly,
            autoFocus: autofocus && index === 0 },
          option.label
        );
        return inline ? _react2.default.createElement(
          "label",
          { key: index },
          checkbox
        ) : _react2.default.createElement(
          _antd.Col,
          { span: 8, key: index },
          checkbox
        );
      })
    )
  );
}

CheckboxesWidget.defaultProps = {
  autofocus: false,
  options: {
    inline: false
  }
};

if (process.env.NODE_ENV !== "production") {
  CheckboxesWidget.propTypes = {
    schema: _propTypes2.default.object.isRequired,
    id: _propTypes2.default.string.isRequired,
    options: _propTypes2.default.shape({
      enumOptions: _propTypes2.default.array,
      inline: _propTypes2.default.bool
    }).isRequired,
    value: _propTypes2.default.any,
    required: _propTypes2.default.bool,
    readonly: _propTypes2.default.bool,
    disabled: _propTypes2.default.bool,
    multiple: _propTypes2.default.bool,
    autofocus: _propTypes2.default.bool,
    onChange: _propTypes2.default.func
  };
}

exports.default = CheckboxesWidget;