"use strict";

require("core-js/modules/es6.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.withBackgrounds = void 0;

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es7.object.values");

require("core-js/modules/es6.array.is-array");

var _addons = _interopRequireWildcard(require("@storybook/addons"));

var _coreEvents = _interopRequireDefault(require("@storybook/core-events"));

var _utilDeprecate = _interopRequireDefault(require("util-deprecate"));

var _constants = _interopRequireDefault(require("./constants"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var prevBackgrounds;

var subscription = function subscription() {
  return function () {
    prevBackgrounds = null;

    _addons.default.getChannel().emit(_constants.default.UNSET);
  };
};

var withBackgrounds = (0, _addons.makeDecorator)({
  name: 'withBackgrounds',
  parameterName: 'backgrounds',
  skipIfNoParametersOrOptions: true,
  allowDeprecatedUsage: true,
  wrapper: function wrapper(getStory, context, _ref) {
    var options = _ref.options,
        parameters = _ref.parameters;
    var data = parameters || options || [];
    var backgrounds = Array.isArray(data) ? data : Object.values(data);

    if (backgrounds.length === 0) {
      return getStory(context);
    }

    if (prevBackgrounds !== backgrounds) {
      _addons.default.getChannel().emit(_constants.default.SET, backgrounds);

      prevBackgrounds = backgrounds;
    }

    _addons.default.getChannel().emit(_coreEvents.default.REGISTER_SUBSCRIPTION, subscription);

    return getStory(context);
  }
});
exports.withBackgrounds = withBackgrounds;

var _default = (0, _utilDeprecate.default)(withBackgrounds, 'The default export of @storybook/addon-backgrounds is deprecated, please `import { withBackgrounds }` instead');

exports.default = _default;