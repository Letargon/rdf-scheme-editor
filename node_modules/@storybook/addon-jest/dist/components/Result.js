"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FailedResult = void 0;

require("core-js/modules/es6.array.for-each");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.object.define-property");

require("core-js/modules/es6.regexp.match");

require("core-js/modules/es6.array.index-of");

require("core-js/modules/es6.array.reduce");

require("core-js/modules/es6.regexp.replace");

require("core-js/modules/es6.array.filter");

require("core-js/modules/es6.string.trim");

require("core-js/modules/es6.regexp.split");

require("core-js/modules/es6.array.map");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _components = require("@storybook/components");

var _Indicator = _interopRequireDefault(require("./Indicator"));

var _colors = _interopRequireDefault(require("../colors"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Pre =
/*#__PURE__*/
(0, _styled.default)("pre", {
  target: "efeusp40"
})(_objectSpread({
  margin: 0
}, _components.monoFonts));
var FlexContainer =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "efeusp41"
})({
  display: 'flex',
  alignItems: 'center'
});
/* eslint no-control-regex:0 */

var patterns = [/^\x08+/, /^\x1b\[[012]?K/, /^\x1b\[?[\d;]{0,3}/];
var Positive =
/*#__PURE__*/
(0, _styled.default)("strong", {
  target: "efeusp42"
})({
  color: _colors.default.success,
  fontWeight: 500
});
var Negative =
/*#__PURE__*/
(0, _styled.default)("strong", {
  target: "efeusp43"
})({
  color: _colors.default.error,
  fontWeight: 500
});
var StackTrace =
/*#__PURE__*/
(0, _styled.default)(function (_ref) {
  var trace = _ref.trace,
      className = _ref.className;
  return _react.default.createElement("details", {
    className: className
  }, _react.default.createElement("summary", null, "Callstack"), trace.join('').trim().split(/\n/).map(function (traceLine, traceLineIndex) {
    return (// eslint-disable-next-line react/no-array-index-key
      _react.default.createElement("div", {
        key: traceLineIndex
      }, traceLine.trim())
    );
  }));
}, {
  target: "efeusp44"
})({
  background: 'silver',
  padding: 10
});
var Main =
/*#__PURE__*/
(0, _styled.default)(function (_ref2) {
  var msg = _ref2.msg,
      className = _ref2.className;
  return _react.default.createElement("section", {
    className: className
  }, msg);
}, {
  target: "efeusp45"
})({
  padding: 10,
  borderBottom: '1px solid silver'
});
var Sub =
/*#__PURE__*/
(0, _styled.default)(function (_ref3) {
  var msg = _ref3.msg,
      className = _ref3.className;
  return _react.default.createElement("section", {
    className: className
  }, msg.filter(function (item) {
    return typeof item !== 'string' || typeof item === 'string' && item.trim() !== '';
  }).map(function (item, index, list) {
    switch (true) {
      case typeof item === 'string' && index === 0 && index === list.length - 1:
        {
          return item.trim();
        }

      case typeof item === 'string' && index === 0:
        {
          return item.replace(/^[\s\n]*/, '');
        }

      case typeof item === 'string' && index === list.length - 1:
        {
          return item.replace(/[\s\n]*$/, '');
        }

      default:
        {
          return item;
        }
    } // typeof item === 'string' ? <span>{item}</span> : item;

  }));
}, {
  target: "efeusp46"
})({
  padding: 10
});

var createSubgroup = function createSubgroup(acc, item, i, list) {
  // setup aggregators
  if (!acc.list) {
    acc.list = [];
  }

  if (!acc.grouped) {
    acc.grouped = [];
  }

  if (!('grouperIndex' in acc)) {
    acc.grouperIndex = 0;
  } else {
    acc.grouperIndex += 1;
  } // start or stop extraction


  if (acc.startTrigger(item)) {
    acc.mode = 'inject';
    acc.injectionPoint = i;
  }

  if (acc.endTrigger(item)) {
    acc.mode = 'stop';
  } // push item in correct aggregator


  if (acc.mode === 'inject') {
    acc.grouped.push(item);
  } else {
    acc.list.push(item);
  } // on last iteration inject at detected injectionpoint, and group


  if (i === list.length - 1) {
    // Provide a "safety net" when Jest returns a partially recognized "group"
    // (recognized by acc.startTrigger but acc.endTrigger was never found) and
    // it's the only group in output for a test result. In that case, acc.list
    // will be empty, so return whatever was found, even if it will be unstyled
    // and prevent next createSubgroup calls from throwing due to empty lists.
    acc.list.push(null);
    return acc.list.reduce(function (eacc, el, ei) {
      switch (true) {
        case acc.injectionPoint === 0 && ei === 0:
          {
            // at index 0, inject before
            return eacc.concat(acc.grouper(acc.grouped, acc.grouperIndex)).concat(el);
          }

        case acc.injectionPoint > 0 && acc.injectionPoint === ei + 1:
          {
            // at index > 0, and next index WOULD BE injectionPoint, inject after
            return eacc.concat(el).concat(acc.grouper(acc.grouped, acc.grouperIndex));
          }

        default:
          {
            // do not inject
            return eacc.concat(el);
          }
      }
    }, []);
  }

  return acc;
};

var Message = function Message(_ref4) {
  var msg = _ref4.msg;
  var data = patterns.reduce(function (acc, regex) {
    return acc.replace(regex, '');
  }, msg).split(/\[2m/).join('').split(/\[22m/).reduce(function (acc, item) {
    return acc.concat(item);
  }, []).map(function (item, li) {
    return typeof item === 'string' ? item.split(/\[32m(.*?)\[39m/) // eslint-disable-next-line react/no-array-index-key
    .map(function (i, index) {
      return index % 2 ? _react.default.createElement(Positive, {
        key: "p_".concat(li, "_").concat(i)
      }, i) : i;
    }) : item;
  }).reduce(function (acc, item) {
    return acc.concat(item);
  }, []).map(function (item, li) {
    return typeof item === 'string' ? item.split(/\[31m(.*?)\[39m/) // eslint-disable-next-line react/no-array-index-key
    .map(function (i, index) {
      return index % 2 ? _react.default.createElement(Negative, {
        key: "n_".concat(li, "_").concat(i)
      }, i) : i;
    }) : item;
  }).reduce(function (acc, item) {
    return acc.concat(item);
  }, []).reduce(createSubgroup, {
    startTrigger: function startTrigger(e) {
      return typeof e === 'string' && e.indexOf('Error: ') === 0;
    },
    endTrigger: function endTrigger(e) {
      return typeof e === 'string' && e.match('Expected ');
    },
    grouper: function grouper(list, key) {
      return _react.default.createElement(Main, {
        key: key,
        msg: list
      });
    }
  }).reduce(function (acc, it) {
    return typeof it === 'string' ? acc.concat(it.split(/(at(.|\n)+\d+:\d+\))/)) : acc.concat(it);
  }, []).reduce(function (acc, item) {
    return acc.concat(item);
  }, []).reduce(createSubgroup, {
    startTrigger: function startTrigger(e) {
      return typeof e === 'string' && e.indexOf('Expected ') !== -1;
    },
    endTrigger: function endTrigger(e) {
      return typeof e === 'string' && e.match(/^at/);
    },
    grouper: function grouper(list, key) {
      return _react.default.createElement(Sub, {
        key: key,
        msg: list
      });
    }
  }).reduce(createSubgroup, {
    startTrigger: function startTrigger(e) {
      return typeof e === 'string' && e.match(/at(.|\n)+\d+:\d+\)/);
    },
    endTrigger: function endTrigger() {
      return false;
    },
    grouper: function grouper(list, key) {
      return _react.default.createElement(StackTrace, {
        key: key,
        trace: list
      });
    }
  });
  return _react.default.createElement(Pre, null, data);
};

Message.propTypes = {
  msg: _propTypes.default.string.isRequired
};
var Head =
/*#__PURE__*/
(0, _styled.default)("header", {
  target: "efeusp47"
})({
  display: 'flex',
  justifyContent: 'space-between',
  alignItems: 'flex-start'
});
var Title =
/*#__PURE__*/
(0, _styled.default)("h3", {
  target: "efeusp48"
})({
  padding: '10px 10px 0 10px',
  margin: 0
});
var FailedResult =
/*#__PURE__*/
(0, _styled.default)(function (_ref5) {
  var fullName = _ref5.fullName,
      title = _ref5.title,
      status = _ref5.status,
      failureMessages = _ref5.failureMessages,
      className = _ref5.className;
  return _react.default.createElement("div", {
    className: className
  }, _react.default.createElement(Head, null, _react.default.createElement(FlexContainer, null, _react.default.createElement(_Indicator.default, {
    color: _colors.default.error,
    size: 10,
    styles: {
      borderRadius: '5px 0',
      position: 'relative',
      top: -1,
      left: -1
    }
  }), _react.default.createElement(Title, null, fullName || title)), _react.default.createElement(_Indicator.default, {
    color: _colors.default.error,
    size: 16,
    styles: {
      borderRadius: '0 5px',
      position: 'relative',
      top: -1,
      right: -1
    }
  }, status)), failureMessages.map(function (msg, i) {
    return _react.default.createElement(Message, {
      msg: msg,
      key: i
    });
  }));
}, {
  target: "efeusp49"
})({
  display: 'block',
  borderRadius: 5,
  margin: 0,
  padding: 0,
  position: 'relative',
  border: '1px solid silver',
  boxSizing: 'border-box'
});
exports.FailedResult = FailedResult;

var Result = function Result(_ref6) {
  var fullName = _ref6.fullName,
      title = _ref6.title,
      status = _ref6.status;
  return _react.default.createElement("div", {
    style: {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between'
    }
  }, _react.default.createElement(FlexContainer, null, _react.default.createElement(_Indicator.default, {
    color: _colors.default.success,
    size: 10
  }), _react.default.createElement("div", null, fullName || title)), _react.default.createElement(FlexContainer, null, _react.default.createElement(_Indicator.default, {
    color: _colors.default.success,
    size: 14,
    right: true
  }, status)));
};

Result.defaultProps = {
  fullName: '',
  title: ''
};
Result.propTypes = {
  fullName: _propTypes.default.string,
  title: _propTypes.default.string,
  status: _propTypes.default.string.isRequired
};
var _default = Result;
exports.default = _default;